using System.Text;

namespace AjaxService.Gen.Models.Typescript;

public sealed class AjaxService : TsFileBase
{
    private AjaxService(string path) : base(path) { }
    public static AjaxService From(string path)
    {
        const string defaultContent =
            """ 
//This File is autogenerated, DO NOT touch this file!
export module AjaxService {
    function BuildQuery<T>(qName: string, arr: T[]): string {

        var query = "?";
        arr.forEach((item) => {
            query += `&${qName}=${item}`;
        });
        if (query == "?") {
            return "";
        }
        return query;
    }

    async function FetchAsync<TOut>(url: string, method: string, headers?: HeadersInit, body?: BodyInit): Promise<OneOf<Response, TOut>> {
        let request: RequestInit = {
            method: method,
            headers: {
                "accept": "text/plain",
                "Content-Type": "application/json",
                ...headers,
            },
        };
        if (body != null) {
            request.body = body;
        }
        let response = await fetch(url, request);
        return response.ok ? Right.Create(JSON.parse(await response.json())) : Left.Create(response);
    }



""";

        File.WriteAllText(path, defaultContent, Encoding.UTF8);
        return new(path);
    }
}